controller:
  admin:
    existingSecret: jenkins-secret
    userKey: jenkins-admin-user
    passwordKey: jenkins-admin-password

  installPlugins:
    - kubernetes
    - workflow-job
    - workflow-aggregator
    - job-dsl
    - git
    - blueocean
    - configuration-as-code
    - jdbc
    - postgresql

  ingress:
    enabled: true
    ingressClassName: nginx
    hostName: jenkins.example.com
    path: /
    pathType: Prefix
    # tls:
    #   - hosts:
    #       - jenkins.example.com
    #     secretName: jenkins-tls

  persistence:
    enabled: true
    storageClassName: ebs-csi-sc
    size: 10Gi

  service:
    type: ClusterIP

  JCasC:
    enabled: true
    configScripts:
      kubernetes-agent: |
        jenkins:
          clouds:
            - kubernetes:
                name: "eks"
                namespace: "jenkins"
                jenkinsUrl: "http://jenkins.jenkins.svc.cluster.local:8080"
                jenkinsTunnel: "jenkins-agent.jenkins.svc.cluster.local:50000"
                containerCapStr: "10"
                templates:
                  - name: "default"
                    label: "jenkins-agent"
                    containers:
                      - name: "jnlp"
                        image: "jenkins/inbound-agent:latest"
                        args: '${computer.jnlpmac} \${computer.name}'
                        ttyEnabled: true
                        resourceRequestCpu: "200m"
                        resourceRequestMemory: "512Mi"
      job-dsl-script: |
        jobs:
          - script: >
              pipelineJob('timestamp-recorder') {
                description('Writes timestamp to PostgreSQL every 5 minutes')
                triggers {
                  cron('H/5 * * * *')
                }
                definition {
                  cps {
                    script("""
                      pipeline {
                        agent {
                          kubernetes {
                            label 'jenkins-agent'
                            defaultContainer 'jnlp'
                          }
                        }
                        environment {
                          DB_HOST = "postgres-postgresql.postgres.svc.cluster.local"
                          DB_NAME = "postgres"
                          DB_USER = credentials('postgres-user')
                          DB_PASS = credentials('postgres-password')
                        }
                        stages {
                          stage('Write Timestamp') {
                            steps {
                              container('jnlp') {
                                sh '''
                                  apt-get update && apt-get install -y postgresql-client
                                  PGPASSWORD="$DB_PASS" psql -h "$DB_HOST" -U "$DB_USER" -d "$DB_NAME" -c "INSERT INTO users (username, email) VALUES ('timestamp', NOW()::text || '@job.local');"
                                '''
                              }
                            }
                          }
                        }
                      }
                    """)
                    sandbox(true)
                  }
                }
              }

